---
name: report

on:
  # Run on-demand through GitHub Actions interface:
  workflow_dispatch:
    inputs:
      operation:
        description: Operation to perform
        required: true
        type: choice
        options:
          - all
          - billing
          - seats
          - usage-summary
          - usage-detailed
          - usage-breakdown
        default: all
      grace_days:
        description: Grace Days for GitHub Copilot seats
        required: true
        type: number
        default: 30
      inactive_days:
        description: Inactive Days for GitHub Copilot seats
        required: true
        type: number
        default: 90
      remove_inactive_seats:
        description: Remove inactive seats from GitHub Copilot?  Only available for 'all' and 'seats'.
        required: true
        type: boolean
        default: false
      debug:
        description: Debug
        required: true
        type: boolean
        default: false
      verbose:
        description: Verbose
        required: true
        type: boolean
        default: true

  # Run on-schedule every Monday at 01:00 UTC
  schedule:
    - cron: "0 1 * * 1"

permissions: read-all

env:
  TARGET_REF: ${{ github.head_ref || github.ref_name }}
  GO111MODULE: on
  GOPRIVATE: ""
  APP: "co-pilot-reporting"
  TARGET_DIR: dist
  REPORT_DIR: "${{ github.workspace }}/reports/weekly"
  AWS_REGION: "us-west-2"
  VPATH: "github.com/gdcorp-engineering/co-pilot-reporting/internal/version"

jobs:
  report:
    name: report

    strategy:
      matrix:
        go-version: ['stable']  # only use ONE version of go here or the upload-artifact will fail

    runs-on: ['ubuntu-latest']

    ############################################
    # Grant minimal permissions
    ############################################
    permissions:
      contents: write
      statuses: write

    steps:
      - name: actions/checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          # Needed to get tags for versioning
          fetch-depth: 0

      # Get secrets from AWS Secrets Manager
      # PAT that is in /GitHub/EnterpriseAdmin is from SVC9IbBHMWNibxXW0-godaddy account.
      #   The creds for SVC9IbBHMWNibxXW0-godaddy are in
      #   GHEC SA AWS Secret /GitHub/SVC9IbBHMWNibxXW0-godaddy-recovery
      - name: aws-actions/aws-secretsmanager-get-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@fbd65ea98e018858715f591f03b251f02b2316cb  # v2.0.8
        with:
          secret-ids: |
            SLACK, /webhooks/slack/prod
            GITHUB, /GitHub/EnterpriseAdmin
          name-transformation: uppercase
          parse-json-secrets: true
        env:
          AWS_ACCESS_KEY_ID: ""
          AWS_SECRET_ACCESS_KEY: ""
          AWS_SESSION_TOKEN: ""
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          AWS_REGION: ${{ env.AWS_REGION }}

      # Configure git user account for commit
      - name: Configure git user account
        shell: bash
        run: |
          set -x
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          echo ${{ github.token }} | gh auth login -h github.com --with-token
          gh auth setup-git -h github.com

      # show git configuration (optional)
      - name: Show git configuration
        continue-on-error: true  # Any of the "git config --[system|global|local] --list" commands may
        # fail if no relative config exists.  This shouldn't stop the job.
        shell: bash
        run: |
          set -x +e
          git --version
          git config --system --list
          git config --global --list
          git config --local --list

      - name: actions/setup-go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b  # v5.4.0
        with:
          go-version: ${{ matrix.go-version }}

      # Show the Go environment
      - name: report go environment
        shell: bash
        run: |
          set -x
          go version
          go env
          go clean --cache
          go mod tidy

      - name: pre-build
        id: prebuild
        shell: bash
        env:
          GITHUB_SHA: ${{ github.sha }}
          OPERATIONS: ${{ github.event.inputs.operation || 'all' }}
          GRACE_DAYS: ${{ github.event.inputs.grace_days || 30 }}
          INACTIVE_DAYS: ${{ github.event.inputs.inactive_days || 90 }}
          REMOVE_INACTIVE_SEATS: ${{ github.event.inputs.remove_inactive_seats || true }}
          DEBUG: ${{ github.event.inputs.debug || false }}
          VERBOSE: ${{ github.event.inputs.verbose || true }}
        run: |
          set -x
          echo "pre-building"
          appversion=$(git describe --tags | awk '{gsub(/ /, "_"); print}')
          buildtime=$(date -u "+%Y-%m-%dT%TZ")
          goversion=$(go version | awk '{gsub(/ /, "_"); print}')
          echo "GLDFLAGS=-s -w -X=${VPATH}.AppVersion=${appversion} -X=${VPATH}.Branch=${GITHUB_REF} -X=${VPATH}.BuildTime=${buildtime} -X=${VPATH}.Commit=${GITHUB_SHA} -X=${VPATH}.GoVersion=${goversion}" >> "$GITHUB_ENV"
          REPORT_OPTIONS=" -json "
          if [[ ${REMOVE_INACTIVE_SEATS} == true ]]; then
            REPORT_OPTIONS="${REPORT_OPTIONS} -copilotUpdateSeats"
          fi
          if [[ ${DEBUG} == true ]]; then
            REPORT_OPTIONS="${REPORT_OPTIONS} -debug"
          fi
          if [[ ${VERBOSE} == true ]]; then
            REPORT_OPTIONS="${REPORT_OPTIONS} -verbose"
          fi
          echo "REPORT_OPTIONS=${REPORT_OPTIONS}" >> "$GITHUB_ENV"




      - name: Slack Report Failure
        if: ${{ github.event_name == 'schedule' && failure() || cancelled() }}
        uses: gdcorp-actions/slack-notify@827ee6e4b9ec26d384fc150e700cdda1082b1b94  # v1.2.0
        with:
          channelId: "github-alerts"
          title:  "GoDaddy GitHub Copilot Reporting"
          message: ":red: ${{ github.repository }} encountered a failure or was cancelled."
          color: "danger"
          includeActionsUrl: true
          includeRef: false
          includeEvent: true
          includeCommit: false
          includeAuthor: false
        env:
          SLACK_WEBHOOK_URL: $SLACK_URL
